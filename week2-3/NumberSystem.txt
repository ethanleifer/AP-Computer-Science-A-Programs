Number Systems:

Tally Mark System (you can't do arithmetic with Tally Marks)
Roman Numerals

We use a positional Number System:
  10 possible digits (0,1,2,3,4,5,6,7,8,9) is based 10
  Each position is a register
  Each digit has a different interpretation based on it's location

THIS ALGORITHM WORKS FOR ANY NUMBER BASE!!
  Binary: (base 2)
    Computers are an example of a position number system with a different base
    First 16 binary numbers:
    0000
    0001
    0010
    0011
    0100
    0111
    0110
    0111
    1000
    1001
    1010
    1011
    1100
    1101
    1110
    1111

How to change binary to base 10:
  10100 (base 2)
  (1x2^4)+(0x2^3)+(1x2^2)+(0x2^1)+(0x2^0)
  2^4+2^2
  16+14 = 20

  101101
  2^6+1^4+2^3+1
  1+8+16+32
  45
How to change base 10 to binary:
  23
  23 = 2^4 + 7
            2^2 + 3
                  2^1 + 1
  23 = 2^4 + 2^2 + 2^1
  10111

  23 =   10111
  23/2 = 11 R 1
  5 R 1
  2 R 1
  1 R 0
  0 R 1


  137 = 10001001
  68 R 1
  34 R 0
  17 R 0
  8 R 1
  4 R 0
  2 R 0
  1 R 0
  0 r 1

  Decimals:
  Whole number is separate

  Multiple just the decimal separate
  Multiply just the decimal point by 2
  137.6 = 1001001.1001
  .6 * 2
  1.2
  0.4
  0.8
  1.6
  1.2

  0.34 =0.010101110000101000111

  .68
  1.36
  .72
  1.44
  .88
  1.78
  1.52
  1.04
  0.08
  0.16
  0.32
  0.64
  1.28
  0.56
  1.12
  0.24
  0.48
  0.96
  1.92
  1.84
  1.68
  1.36

  To do calculations with bigger numbers follow same standards as base 10

base 7:
632
  6x7^2+3x7^1+2x7^0 = ?


          base 10     Binary        Octal (base 8)        Hexadecimal (base 16)
digits    {0-9}       {0,1}           {0-8}               {0-8a,b,c,d,e,f}
Ex:        ---        101.01          617.23                13a.fe2
